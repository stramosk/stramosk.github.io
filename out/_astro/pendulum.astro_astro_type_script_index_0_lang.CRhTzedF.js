class n{canvas;ctx;animationId=0;length=1;mass=1;gravity=9.81;initialAngle=45;angle=0;angularVelocity=0;time=0;isRunning=!1;centerX=0;centerY=0;bobX=0;bobY=0;constructor(){this.canvas=document.getElementById("pendulumCanvas"),this.ctx=this.canvas.getContext("2d"),this.setupCanvas(),this.setupEventListeners(),this.reset(),this.draw()}setupCanvas(){const t=this.canvas.getBoundingClientRect();this.canvas.width=t.width,this.canvas.height=400,this.centerX=this.canvas.width/2,this.centerY=100}setupEventListeners(){document.getElementById("length")?.addEventListener("input",t=>{this.length=parseFloat(t.target.value),document.getElementById("lengthValue").textContent=`${this.length.toFixed(1)} m`,this.reset()}),document.getElementById("mass")?.addEventListener("input",t=>{this.mass=parseFloat(t.target.value),document.getElementById("massValue").textContent=`${this.mass.toFixed(1)} kg`}),document.getElementById("gravity")?.addEventListener("input",t=>{this.gravity=parseFloat(t.target.value),document.getElementById("gravityValue").textContent=`${this.gravity.toFixed(2)} m/s²`,this.reset()}),document.getElementById("initialAngle")?.addEventListener("input",t=>{this.initialAngle=parseFloat(t.target.value),document.getElementById("angleValue").textContent=`${this.initialAngle}°`,this.reset()}),document.getElementById("startBtn")?.addEventListener("click",()=>this.start()),document.getElementById("pauseBtn")?.addEventListener("click",()=>this.pause()),document.getElementById("resetBtn")?.addEventListener("click",()=>this.reset())}start(){this.isRunning||(this.isRunning=!0,this.animate())}pause(){this.isRunning=!1,this.animationId&&cancelAnimationFrame(this.animationId)}reset(){this.pause(),this.angle=this.initialAngle*Math.PI/180,this.angularVelocity=0,this.time=0,this.updateBobPosition(),this.updateDisplays(),this.draw()}animate(){if(!this.isRunning)return;const t=1/60;this.time+=t,this.updatePhysics(t),this.updateBobPosition(),this.updateDisplays(),this.draw(),this.animationId=requestAnimationFrame(()=>this.animate())}updatePhysics(t){const e=-(this.gravity/this.length)*Math.sin(this.angle);this.angularVelocity+=e*t,this.angle+=this.angularVelocity*t}updateBobPosition(){this.bobX=this.centerX+this.length*100*Math.sin(this.angle),this.bobY=this.centerY+this.length*100*Math.cos(this.angle)}updateDisplays(){const t=2*Math.PI*Math.sqrt(this.length/this.gravity),e=1/t,i=this.angle*180/Math.PI,s=this.mass*this.gravity*this.length*(1-Math.cos(this.angle));document.getElementById("periodDisplay").textContent=`${t.toFixed(2)} s`,document.getElementById("frequencyDisplay").textContent=`${e.toFixed(2)} Hz`,document.getElementById("angleDisplay").textContent=`${i.toFixed(2)}°`,document.getElementById("velocityDisplay").textContent=`${this.angularVelocity.toFixed(2)} rad/s`,document.getElementById("energyDisplay").textContent=`${s.toFixed(2)} J`}draw(){this.ctx.fillStyle="#000000",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.drawGrid(),this.drawPendulum(),this.drawTrajectory()}drawGrid(){this.ctx.strokeStyle="#333333",this.ctx.lineWidth=1;for(let t=0;t<this.canvas.width;t+=50)this.ctx.beginPath(),this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.canvas.height),this.ctx.stroke();for(let t=0;t<this.canvas.height;t+=50)this.ctx.beginPath(),this.ctx.moveTo(0,t),this.ctx.lineTo(this.canvas.width,t),this.ctx.stroke()}drawPendulum(){this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.centerY),this.ctx.lineTo(this.bobX,this.bobY),this.ctx.stroke(),this.ctx.fillStyle="#ffffff",this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,8,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#ff6b6b",this.ctx.beginPath(),this.ctx.arc(this.bobX,this.bobY,20,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=2,this.ctx.stroke()}drawTrajectory(){this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=1,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.moveTo(0,this.centerY+this.length*100),this.ctx.lineTo(this.canvas.width,this.centerY+this.length*100),this.ctx.stroke(),this.ctx.setLineDash([])}}window.addEventListener("load",()=>{new n});
